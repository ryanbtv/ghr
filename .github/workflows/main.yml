name: Docker Build & Push

on:
  push:
    branches: [ "main" ]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  
jobs:
  build:
    runs-on: self-hosted
    container: ghcr.io/catthehacker/ubuntu:act-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - dockerfile: ./actions-runner-containers/ssh-agent.Dockerfile
            image: ghcr.io/fireflylabs-ai/ssh-agent
          - dockerfile: ./actions-runner-containers/ansible.Dockerfile
            image: ghcr.io/fireflylabs-ai/ansible
          - dockerfile: ./actions-runner-containers/curl.Dockerfile
            image: ghcr.io/fireflylabs-ai/curl
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        if: ${{ !github.event.act }} # skip during local actions testing

      # https://github.com/docker/setup-qemu-action
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Extract metadata (tags, labels) for Docker
      # https://github.com/docker/metadata-action
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ matrix.image }}

      # Build and push Docker image with Buildx (don't push on PR)
      # https://github.com/docker/build-push-action
      - name: Build and push ssh-agent
        id: build-and-push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64